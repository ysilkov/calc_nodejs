{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { initialState } from \"../initialState\";\nexport const getAdd = createAsyncThunk(\"add/getAdd\", async (data, _ref) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref;\n\n  try {\n    const response = await fetch(\"http://localhost:5000/api/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const res = await response.json();\n    dispatch(changeResult(res.ans));\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const getDiv = createAsyncThunk(\"add/getDiv\", async (data, _ref2) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref2;\n\n  try {\n    const response = await fetch(\"http://localhost:5000/api/div\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const res = await response.json();\n    dispatch(changeResult(res.ans));\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const getMul = createAsyncThunk(\"add/getMul\", async (data, _ref3) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref3;\n\n  try {\n    const response = await fetch(\"http://localhost:5000/api/mul\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const res = await response.json();\n    dispatch(changeResult(res.ans));\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const getSub = createAsyncThunk(\"add/getSub\", async (data, _ref4) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref4;\n\n  try {\n    const response = await fetch(\"http://localhost:5000/api/sub\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const res = await response.json();\n    dispatch(changeResult(res.ans));\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const Add = createSlice({\n  name: \"add\",\n  initialState,\n  reducers: {\n    changeValueA(state, action) {\n      state.numberA = action.payload;\n    },\n\n    changeValueB(state, action) {\n      state.numberB = action.payload;\n    },\n\n    changeResult(state, action) {\n      state.result = action.payload;\n    },\n\n    clear(state, action) {\n      state.numberA = action.payload.a;\n      state.numberB = action.payload.b;\n      state.result = action.payload.result;\n    },\n\n    undo(state, action) {\n      state.numberA = action.payload;\n      console.log(action.payload.newNumber1);\n      console.log(action.payload.newNumber2);\n      state.numberB = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [getAdd.rejected]: (state, action) => {\n      state.error = action.payload;\n    },\n    [getDiv.rejected]: (state, action) => {\n      state.error = action.payload;\n    },\n    [getMul.rejected]: (state, action) => {\n      state.error = action.payload;\n    },\n    [getSub.rejected]: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  changeValueA,\n  changeValueB,\n  changeResult,\n  error,\n  clear,\n  undo\n} = Add.actions;\nexport default Add.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","getAdd","data","rejectWithValue","dispatch","response","fetch","method","headers","Accept","body","JSON","stringify","res","json","changeResult","ans","error","message","getDiv","getMul","getSub","Add","name","reducers","changeValueA","state","action","numberA","payload","changeValueB","numberB","result","clear","a","b","undo","console","log","newNumber1","newNumber2","extraReducers","rejected","actions","reducer"],"sources":["D:/calc_nodejs/client/src/store/reducers/add.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { initialState } from \"../initialState\";\r\n\r\nexport const getAdd = createAsyncThunk(\r\n  \"add/getAdd\",\r\n  async (data, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/add\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const res = await response.json();\r\n      dispatch(changeResult(res.ans));\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const getDiv = createAsyncThunk(\r\n  \"add/getDiv\",\r\n  async (data, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/div\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const res = await response.json();\r\n      dispatch(changeResult(res.ans));\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const getMul = createAsyncThunk(\r\n  \"add/getMul\",\r\n  async (data, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/mul\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const res = await response.json();\r\n      dispatch(changeResult(res.ans));\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\nexport const getSub = createAsyncThunk(\r\n  \"add/getSub\",\r\n  async (data, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/sub\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n      const res = await response.json();\r\n      dispatch(changeResult(res.ans));\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const Add = createSlice({\r\n  name: \"add\",\r\n  initialState,\r\n  reducers: {\r\n    changeValueA(state, action) {\r\n      state.numberA = action.payload;\r\n    },\r\n    changeValueB(state, action) {\r\n      state.numberB = action.payload;\r\n    },\r\n    changeResult(state, action) {\r\n      state.result = action.payload;\r\n    },\r\n    clear(state, action) {\r\n      state.numberA = action.payload.a;\r\n      state.numberB = action.payload.b;\r\n      state.result = action.payload.result;\r\n    },\r\n    undo(state, action) {\r\n      state.numberA = action.payload;\r\n      console.log(action.payload.newNumber1)\r\n      console.log(action.payload.newNumber2)\r\n      state.numberB = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getAdd.rejected]: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    [getDiv.rejected]: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    [getMul.rejected]: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    [getSub.rejected]: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { changeValueA, changeValueB, changeResult, error, clear, undo } =\r\n  Add.actions;\r\nexport default Add.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}